name: Monitoring Stability and Comparing Results

# Triggers when a pull_request is created
on:
  pull_request:
    branches:
      - "**"

jobs:
  start_workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Send message to slack
        id: initial-message
        uses: archive/github-actions-slack@master
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ secrets.SLACK_CHANNEL_ID }}
          slack-text: "Comparison workflow started on ${{github.event.repository.name}} by PR ${{github.event.number}} from branch ${{github.head_ref}} to ${{github.base_ref}}"

      - name: Debug output
        run: echo "Data - ${{ steps.initial-message.outputs.slack-result }}"
      - name: Save output to env
        run: echo "INIT_MSG=${{ steps.initial-message.outputs.slack-result }}" >> $GITHUB_ENV

  setup_and_scan:
    needs: start_workflow
    strategy:
      matrix:
        language: ['java', 'python', 'js', 'ruby-1', 'ruby-2']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Debug output
        run: echo ${{env.INIT_MSG}}

      - name: Install JDK-18
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18'

      - name: Export Java Home Path
        run: export PATH=$JAVA_HOME/bin:$PATH

      - name: Install sbt
        run: mkdir -p ~/bin && curl -Ls https://raw.githubusercontent.com/dwijnand/sbt-extras/master/sbt > ~/bin/sbt && chmod 0755 ~/bin/sbt
      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone standalone-monitoring-stability/flow-test
        uses: actions/checkout@v3
        with:
          repository: Privado-Inc/standalone-monitoring-stability
          path: ./temp/standalone-monitoring-stability
          ref: parallel-test

      # langauge specific repository file
      - name: Run the script for ${{github.head_ref}} and ${{github.base_ref}}
        run: cd ./temp/standalone-monitoring-stability && pip install -r requirements.txt && python3 ./run.py -r ./repos/${{matrix.language}}.txt -b ${{github.base_ref}} -h ${{github.head_ref}} -bcr ${{ github.event.pull_request.base.repo.html_url }} -hcr ${{ github.event.pull_request.head.repo.html_url }} -guf
        
      - name: Run aws-export
        run: cd ./temp/standalone-monitoring-stability/ && python3 aws-export.py ${{matrix.language}}-${{github.event.number}}

      - name: Move results to a folder
        run: cd ./temp/standalone-monitoring-stability/ && mkdir results && mv output-${{matrix.language}}-${{github.event.number}}.xlsx ./results/output-${{matrix.language}}-${{github.event.number}}.xlsx && mv ./temp/result-${{matrix.language}}-${{github.event.number}}.zip ./results/result-${{matrix.language}}-${{github.event.number}}.zip && mv slack_summary.txt ./results/slack_summary.txt

      # Send result to slack
      - name: Zip the results
        run: zip result-${{matrix.language}}-${{github.event.number}}.zip -r /home/runner/work/privado-core/privado-core/temp/standalone-monitoring-stability/results

      - name: Set summary variable
        run: |
          echo "MESSAGE<<EOF" >> $GITHUB_ENV
          echo "$(cat /home/runner/work/privado-core/privado-core/temp/standalone-monitoring-stability/results/slack_summary.txt)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Post results to slack
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: "/home/runner/work/privado-core/privado-core/result-${{matrix.language}}-${{github.event.number}}.zip"
          initial_comment: "Comparison Results generated on ${{github.event.repository.name}} by PR ${{github.event.number}} from branch ${{github.head_ref}} to ${{github.base_ref}} \nPR link https://github.com/Privado-Inc/privado-core/pull/${{github.event.number}}\n Language: ${{matrix.language}} \nSummary Report:\n ${{ env.MESSAGE }}"
          file_type: "zip"

      - name: Export workflow output
        run: cd ./temp/standalone-monitoring-stability && python3 ./workflow_check.py /home/runner/work/privado-core/privado-core/temp/standalone-monitoring-stability/results/slack_summary.txt

      - name: Set summary variable
        run: |
          echo "MESSAGE<<EOF" >> $GITHUB_ENV
          echo "$(cat ./temp/standalone-monitoring-stability/action_result.txt)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV 

      - name: Print action result
        run: cat ./temp/standalone-monitoring-stability/action_result.txt

      - name: Workflow report analysis
        if: ${{ env.MESSAGE != 'true' }}
        run: exit 1